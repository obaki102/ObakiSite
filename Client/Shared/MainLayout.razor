@using ObakiSite.Client.Services.Components.Badge
@inherits LayoutComponentBase
@inject IBadgeUpdater BadgeUpdater

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudChip Color="Color.Dark" Href="/"><MudText Typo="Typo.button" Style="font-size: 35px;">O</MudText><MudText Typo="Typo.caption" Style="font-size: 20px;">baki</MudText></MudChip>
        <MudSpacer />
        <MudIconButton Href="anime" Icon="@Icons.Material.Filled.List" />
        @if (_bagedeNo == 0)
        {
            <MudAvatar Color="Color.Primary" Variant="Variant.Outlined">
                <MudIconButton Icon="@Icons.Material.Filled.Chat" Color="Color.Inherit" OnClick="@OpenDrawer" />
            </MudAvatar>
        }
        else
        {
            <MudBadge Content="@_bagedeNo" Color="Color.Primary" Overlap="true" Class="mx-6 my-4">
                <MudAvatar Color="Color.Primary" Variant="Variant.Outlined">
                    <MudIconButton Icon="@Icons.Material.Filled.Chat" Color="Color.Inherit" OnClick="@OpenDrawer" />
                </MudAvatar>
            </MudBadge>

        }
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" DisableOverlay="true" Width="400px" Height="100%" Anchor="Anchor.End" Elevation="1" Variant="@DrawerVariant.Responsive">
        <LiveChat />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    private MudTheme _theme = new();
    private bool _isDarkMode = true;
    private int _bagedeNo = 0;
    bool _drawerOpen = false;

    public void OpenDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override void OnInitialized()
    {
        BadgeUpdater.BadgeChangedHandler += UpdateBadge;
    }

    public void UpdateBadge(object? sender, int badgeNo)
    {
        _bagedeNo = badgeNo;
        StateHasChanged();
    }
}
