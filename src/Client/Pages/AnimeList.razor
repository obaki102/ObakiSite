@page "/anime"
@using ObakiSite.Application.Features.Animelist.Queries
@inject ISender Mediatr
<PageTitle>Animelist</PageTitle>

@if (animeLists == null)
{
    <div class="d-flex justify-center flex-row flex-wrap gap-4">
        @for (int i = 0; i < 100; i++)
        {
            <MudCard Style="width:250px;height:550px;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <div class="d-flex justify-space-between">
                            <MudSkeleton Width="50%" Animation="Animation.Wave" />
                            <MudSkeleton Width="10%" Animation="Animation.Wave" />
                        </div>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudSkeleton Width="10%" Animation="Animation.Wave" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Class="pa-1 rounded-lg" Height="250px" Animation="Animation.Wave" />
                <MudCardContent>
                    <MudSkeleton Width="100%" Animation="Animation.Wave" />
                    <MudSkeleton Width="100%" Animation="Animation.Wave" />
                    <MudDivider />
                    <MudSkeleton Width="20%" Animation="Animation.Wave" />
                    <MudSkeleton Width="20%" Animation="Animation.Wave" />
                </MudCardContent>
            </MudCard>
        }

    </div>
}
else
{
    <div class="d-flex justify-center flex-row flex-wrap gap-4">

        @foreach (var anime in animeLists.OrderBy(o => o.Node.Popularity))
        {
            if (anime.Node != null && anime.Node.MainPicture != null)
            {
                <MudCard Style="width:250px;">
                    <MudCardHeader>
                        <CardHeaderContent>
                            @if (@anime.Node.NumEpisodes == 0 && anime.Node.NumEpisodes != 0)
                            {
                                <MudText Typo="Typo.body2">
                                    @FormatDate(anime.Node.StartDate)

                                </MudText>
                            }
                            else
                            {
                                <MudText Typo="Typo.body2">
                                    @FormatDate(anime.Node.StartDate) | @anime.Node.NumEpisodes eps

                                </MudText>
                            }
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudButton Variant="Variant.Text" OnClick="@(() => OpenDrawer(Anchor.Bottom, anime.Node))">
                                <MudTooltip Text="Synopsis">
                                    <MudIcon Icon="@Icons.Filled.Newspaper" Color="Color.Default" />
                                </MudTooltip>
                            </MudButton>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardMedia ObjectFit="ObjectFit.Fill"  Image="@anime.Node.MainPicture.Large" Class="pa-1 rounded-lg" Height="250" />
                    <MudCardContent>
                        <MudText Typo="Typo.h6">@anime.Node.Title (@anime.Node.AlternativeTitles.Ja)</MudText>
                        <MudDivider />
                        @if (anime.Node.Genres != null)
                        {
                            @foreach (var genre in anime.Node.Genres)
                            {
                                <MudChip Color="Color.Default" Size="Size.Small"> @genre.Name</MudChip>
                            }
                        }
                    </MudCardContent>
                </MudCard>
            }
        }

    </div>
    <MudDrawer @bind-Open="@open" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary">
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-4">
            @if (node != null)
            {
                <MudDrawerHeader>
                    <MudStack>
                        <MudText Typo="Typo.body2">@node.Synopsis</MudText>
                        <MudDivider />
                        <MudText Typo="Typo.caption"> Status:<MudChip Color="Color.Primary" Size="Size.Small"> @node.Status.Replace("_"," ")</MudChip></MudText>
                        @if (node.Studios != null)
                        {
                            @foreach (var studio in node.Studios)
                            {
                                <MudText Typo="Typo.caption">@studio.Name</MudText>
                            }
                        }
                    </MudStack>
                </MudDrawerHeader>
            }
        </MudContainer>
    </MudDrawer>
}

@code {
    bool open;
    Anchor anchor;
    private int year = DateTime.Today.Year;
    private Node? node = default;
    private IReadOnlyList<Datum>? animeLists;
    protected override async Task OnInitializedAsync()
    {
        var result = await Mediatr.Send(new GetAnimeListBySeasonAndYear(new Season(year, GetCurrentSeason())));
        if (result.IsSuccess && result.Data is not null)
        {
            animeLists = result.Data.Data;
        }
    }

    private string GetCurrentSeason()
    {
        var currentMonth = DateTime.Now.Month;
        if (currentMonth >= 3 && currentMonth <= 5)
            return "spring";

        if (currentMonth >= 6 && currentMonth <= 8)
            return "summer";

        if (currentMonth >= 9 && currentMonth <= 11)
            return "fall";

        return "winter";
    }

    private void OpenDrawer(Anchor anchor, Node node)
    {
        open = true;
        this.anchor = anchor;
        this.node = node;
    }

    private string FormatDate(string date)
    {
        return DateTime.Parse(date).ToString("MMM dd, yyyy");
    }
}
