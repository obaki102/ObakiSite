@page "/post/view/{id}"
@layout ObakiSiteMainLayout
@inject ISender Mediatr
@inject ISnackbar Snackbar
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@using ObakiSite.Application.Features.Posts.Commands;
@using ObakiSite.Application.Features.Posts.Queries;

<PageTitle>View Post</PageTitle>
@if (post == null)
{
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudPaper Elevation="1" Class="ma-4" Outlined="true" Height="800px">
            <MudCard Elevation="0">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudAvatar Color="Color.Dark">   <MudSkeleton Width="100%" Animation="Animation.Wave" /></MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudSkeleton Width="20%" Animation="Animation.Wave" />
                        <MudSkeleton Width="20%" Animation="Animation.Wave" />
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudMenu AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.BottomLeft">
                            <ActivatorContent>
                                <MudTooltip Text="Options" Color="Color.Primary" Placement="Placement.Bottom">
                                    <MudIconButton Icon="@Icons.Material.Filled.Dehaze" Color="Color.Default" />
                                </MudTooltip>
                            </ActivatorContent>
                            <ChildContent>
                                <MudList Clickable="true">
                                </MudList>
                                <MudList Clickable="true">
                                </MudList>
                            </ChildContent>
                        </MudMenu>
                    </CardHeaderActions>
                </MudCardHeader>
            </MudCard>
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="30px" Class="ml-16 mr-8 mb-4" Width="80%" />
            <div class="ma-4">
                <MudElement HtmlTag="html" Class="ma-4">
                    @for (int i = 0; i < 18; i++)
                    {
                        <MudSkeleton Class="my-4" Width="100%" Animation="Animation.Wave" />
                    }
                </MudElement>
            </div>
        </MudPaper>
    </MudContainer>
}
else
{
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudPaper Elevation="1" Class="ma-4" Outlined="true">
            <MudCard Elevation="0">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudAvatar Color="Color.Dark">A</MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">@post.Author</MudText>
                        <MudText Typo="Typo.caption">Posted on @post.Created</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudMenu AnchorOrigin="Origin.CenterLeft" TransformOrigin="Origin.BottomRight">
                            <ActivatorContent>
                                <MudTooltip Text="Options" Color="Color.Primary" Placement="Placement.Right">
                                    <MudIconButton Icon="@Icons.Material.Filled.Dehaze" Color="Color.Default" />
                                </MudTooltip>
                            </ActivatorContent>
                            <ChildContent>
                              @*  <MudList Clickable="true">
                                    <MudListItem Text="Delete Post" Icon="@Icons.Material.Filled.Delete" Color="Color.Primary" Dense="true" OnClick="OnButtonClicked" />
                                </MudList>
                            <MudDivider></MudDivider>*@
                                <MudList Clickable="true" Class="mx-1">
                                    <MudListItem Text="Edit Post" Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" Dense="true" OnClick="@(() => NavManager.NavigateTo($"/post/edit/{Id}"))" />
                                </MudList>
                            </ChildContent>
                        </MudMenu>
                    </CardHeaderActions>
                </MudCardHeader>
            </MudCard>
            <MudText Class="ml-16 my-4" Style="font-size:30px" Typo="Typo.body2">@post.Title</MudText>
            <div class="mx-12 my-2">
                <div Class="ql-container ql-bubble">
                    <div class="ql-editor">
                        @htmlBody
                    </div>
                </div>
            </div>
        </MudPaper>
    </MudContainer>

    <MudMessageBox @ref="mbox" Title="Delete this post?" CancelText="Cancel">
        <MessageContent>
            <div class="ma-1" style="width:250px">
                Deleting can <b><i>not</i></b> be undone!
            </div>
        </MessageContent>
        <YesButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" Class="mx-4" StartIcon="@Icons.Material.Filled.DeleteForever" OnClick="@DeletePost">Delete!</MudButton>
        </YesButton>
    </MudMessageBox>
}

@code {

    [Parameter]
    public string Id { get; set; } = string.Empty;
    private ElementReference QuillElement;
    private MarkupString htmlBody;
    private PostDTO? post;
    MudMessageBox? mbox { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            var result = await Mediatr.Send(new GetPostById(Id));
            if (result.Value is not null && result.IsSuccess)
            {
                post = result.Value;
                htmlBody = (MarkupString)post.HtmlBody;
            }
        }
    }

    private async Task OnButtonClicked()
    {
        if (mbox is not null)
        {
            bool? result = await mbox.Show();
            var state = result == null ? "Cancelled" : "Deleted!";
            StateHasChanged();
        }
    }

    private async Task DeletePost()
    {
        if (post is not null)
        {
            var result = await Mediatr.Send(new DeletePost(post.Id.ToString()));
            if (result.IsSuccess)
            {
                NavManager.NavigateTo("/obaki");
            }
            else
            {

                Snackbar.Add("Sorry, unable to delete post.", Severity.Error);
            }

            StateHasChanged();
        }
    }
}
