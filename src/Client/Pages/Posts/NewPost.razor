@page "/post/create"
@layout EmptyLayout
@using Blazored.TextEditor
@using ObakiSite.Application.Features.Posts.Commands;
@inject ISender Mediatr
@inject ISnackbar Snackbar
@inject NavigationManager NavManager
<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
    <MudSnackbarProvider />
    <div class="d-flex flex-column">
        <div>
            <MudAppBar Elevation="1">
                <MudContainer MaxWidth="MaxWidth.Large">
                    <div class="d-flex align-center my-8" Elevation="1">
                        <MudChip Color="Color.Dark" Href="/"><MudText Typo="Typo.button" Style="font-size: 35px;">O</MudText><MudText Typo="Typo.caption" Style="font-size: 20px;">baki</MudText></MudChip>
                        <MudDivider Class="ma-1" Vertical="true" FlexItem="true" />
                        <MudText Class="ml-4">Create Post</MudText>
                    </div>
                </MudContainer>
            </MudAppBar>
        </div>
        <MudPaper Class="mt-16" Elevation="2">
            <MudTextField T="string" Class="ma-4" @bind-value="title" Immediate="true" Label="Title" Variant="Variant.Text" />
            <div class="ma-4">
                <BlazoredTextEditor @ref=RichTextEditor Placeholder="write a post..." DebugLevel="error">
                    <ToolbarContent>
                        <div class="ql-bubble">
                            <select class="ql-header">
                                <option selected=""></option>
                                @for (int i = 1; i < 7; i++)
                                {
                                    <option value="@i"></option>
                                }

                            </select>
                            <span class="ql-formats">
                                <button class="ql-font"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-bold"></button>
                                <button class="ql-italic"></button>
                                <button class="ql-underline"></button>
                                <button class="ql-strike"></button>
                            </span>
                            <span class="ql-formats">
                                <select class="ql-color"></select>
                                <select class="ql-background"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-list" value="ordered"></button>
                                <button class="ql-list" value="bullet"></button>
                                <button class="ql-indent" value="-1"></button>
                                <button class="ql-indent" value="+1"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-code-block"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-video"></button>
                            </span>
                            @*  <span class="ql-formats">
                            <button class="ql-image"></button>
                            </span>*@
                        </div>
                    </ToolbarContent>
                </BlazoredTextEditor>
            </div>

        </MudPaper>
        <div class="my-4">
            @if (!isPosting)
            {
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium" OnClick="@PublishPost">Publish</MudButton>
            }
            else
            {
                <MudProgressCircular Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
            }
        </div>
        <MudCard Outlined="true" Elevation="25" Class="mt-4">
            <MudText Class="ma-4 mud-secondary-text" Typo="Typo.caption" GutterBottom="true" Style="font-size: 20px;">This feature is still in development</MudText>
            <MudCardContent>
                <MudText Typo="Typo.body2">
                    Attaching an image is yet to be implemented. I'm still deciding what storage store to use at the minimum cost.  :)
                </MudText>
            </MudCardContent>
        </MudCard>
    </div>
</MudContainer>

@code
{
    //todo: Global theme defaults accross all layouts.
    private MudTheme _theme = Theme.Default();
    private bool _isDarkMode = true;
    private bool isPosting = false;
    private BlazoredTextEditor? RichTextEditor;
    private MarkupString body;
    private string title = string.Empty;

    private async Task ShowAoutPutPreview()
    {
        var hmltContent = RichTextEditor != null ? await RichTextEditor.GetHTML() : string.Empty;
        body = (MarkupString)hmltContent;
    }

    private async Task PublishPost()
    {
        isPosting = true;
        var textContent = RichTextEditor != null ? await RichTextEditor.GetHTML() : string.Empty;
        var post = new PostDTO
            {
                CreationDate = DateTime.Now,
                Description = "Test",
                HtmlBody = textContent,
                Title = title
            };


        var command = new CreatePost(post);
        var result = await Mediatr.Send(command);

        if (result.IsSuccess)
        {
            Snackbar.Add("Post has been created", Severity.Success);
        }
        else
        {
            if (result.Messages.Count > 0)
            {
                foreach (var error in result.Messages)
                    Snackbar.Add(error, Severity.Error);
            }
            Snackbar.Add("Sorry, unable to create the post.", Severity.Error);
        }
        isPosting = false;
        StateHasChanged();
        if (result.IsSuccess) {
            NavManager.NavigateTo($"/post/view/{post.Id}");
        }
    }
}
