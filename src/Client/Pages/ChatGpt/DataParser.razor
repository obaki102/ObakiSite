@page "/obaki/chatgpt/parser"
@layout ChatGptLayout
@inject NavigationManager NavigationManager
@inject IConfiguration ConfigurationManager
@inject ISender Mediatr
@inject ISnackbar Snackbar
<PageTitle>Data Parser</PageTitle>
<MudText Class="my-auto ml-6" Typo="Typo.caption" GutterBottom="true" Style="font-size: 30px;">DataParser</MudText>
<MudContainer MaxWidth="MaxWidth.Medium" Class="align-center mt-4">
    <div class="d-flex align-center " Elevation="1">
        <MudTextField T="string" Label="Input" Class="mr-4" Variant="Variant.Outlined" FullWidth="true" Lines="10" @bind-Value="_input" @onkeydown="OnEnterKeyPress" TextUpdateSuppression="false" DisableUnderLine="true" Immediate="true" />
        @if (!isSending)
        {
            <MudIconButton Variant="Variant.Text" Icon="@Icons.Material.Filled.Send" Color="Color.Primary" OnClick="SendMessage" Size="Size.Medium" Disabled="IsMessageEmpty()" />
        }
        else
        {
            <MudProgressCircular Color="Color.Primary" Class="mr-6" Size="Size.Small" Indeterminate="true" />
        }

    </div>
    <div class="mt-8 mr-16" Elevation="1">
        <MudSelect Margin="Margin.Dense" T="string" Label="Extract data to" Variant="Variant.Outlined" @bind-Value="_format">
            <MudSelectItem Value="@("XML")"> XML</MudSelectItem>
            <MudSelectItem Value="@("JSON")">JSON</MudSelectItem>
        </MudSelect>
    </div>
    <div class="mt-8 mr-16">
        <MudTextField T="string" Label="Output" Variant="Variant.Outlined" FullWidth="true" Lines="10" @bind-Value="_result" @onkeydown="OnEnterKeyPress" />
    </div>

</MudContainer>
@code {
    private string _format = string.Empty;
    private string _input = string.Empty;
    private string _result = string.Empty;
    private bool isSending = false;

    private async Task OnEnterKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            if (!IsMessageEmpty())
                await SendMessage();
        }
    }

    private async Task SendMessage()
    {
        if (string.IsNullOrEmpty(_format))
        {
            Snackbar.Add("Oops! You forgot to select a format. Please select a format from the dropdown list.", Severity.Error);
            return;
        }

        isSending = true;
        var response = await Mediatr.Send(new AskChatGpt($"Extract data from '{_input}' and translate it to {_format} "));

        if (response.IsSuccess)
        {
            _result = response.Value.Result.Replace("\"", "");
        }
        else
        {
            Snackbar.Add(response.Error, Severity.Error);
        }

        isSending = false;
        StateHasChanged();
    }


    public bool IsMessageEmpty()
    {
        if (_input.Length == 0)
            return true;

        return false;
    }

}
